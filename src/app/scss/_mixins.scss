@import 'vars';

@mixin font-face($font-family, $url, $weight, $font-style) {
  @font-face {
    font-family: $font-family;
    src: url('../fonts/#{$url}.woff2') format('woff2'),
    url('../fonts/#{$url}.woff') format('woff') format('embedded-opentype');
    font-weight: $weight;
    font-style: $font-style;
    font-display: swap;
  }
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin pseudo_image_position($repeat: no-repeat, $position: center, $size:cover) {
  @include pseudo;
  background-repeat: $repeat;
  background-position: $position;
  background-size: $size;
}

@mixin line-clamp($lines: 1) {
  @if $lines <=1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

@mixin burger-button($burgerWidth, $burgerHeight, $burgerLineHeight,$burgerColor:$darkBlue-900) {
  width: $burgerWidth;
  height: $burgerHeight;
  position: relative;
  color: $burgerColor;
  margin-top: 10px;

  &__line {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    height: $burgerLineHeight;
    background-color: currentColor;
    transition: transform 0.3s ease-in-out;
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    left: 0;
    width: 100%;
    height: $burgerLineHeight;
    background-color: currentColor;
    transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
  }

  &::before {
    top: 0;
  }

  &::after {
    top: calc(100% - $burgerLineHeight);
  }
}